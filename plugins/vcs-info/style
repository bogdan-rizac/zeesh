zstyle ':vcs_info:*' enable hg git svn
zstyle ':vcs_info:hg*:*' get-bookmarks true
zstyle ':vcs_info:*' get-revision true
zstyle ':vcs_info:*' check-for-changes true

zstyle ':vcs_info:*:*' unstagedstr "+"
zstyle ':vcs_info:git*:*' stagedstr "^"
# zstyle ':vcs_info:hg*:*' hgrevformat "%r:%12.12h"
zstyle ':vcs_info:hg*:*' hgrevformat "%r" # only show local rev.
zstyle ':vcs_info:*:*' branchformat "%b" # only show branch

zstyle ':vcs_info:hg*' formats "%b%m:%i%u"
zstyle ':vcs_info:hg*' actionformats "%b%m:%i%u/%a"
zstyle ':vcs_info:git*' formats "%b%m@%12.12i%u"
zstyle ':vcs_info:git*' actionformats "%b%m@%12.12i%u/%a"

zstyle ':vcs_info:hg+gen-hg-bookmark-string:*' hooks hg-bookmarks
function +vi-hg-bookmarks() {
    local s i
    # The bookmarks returned by `hg' are available in
    # the functions positional parameters.
    for i in "$@"; do
        # I frequently use hg-git, which creates a master bookmark, I'd prefer for that to be ignored
        if [[ $i != "master" ]]; then
            [[ -n $s ]] && s=$s,
            s=${s}$i
        fi
    done
    # tiny styling tweak when bookmark exists
    [[ -n $s ]] && s=/$s
    hook_com[hg-bookmark-string]=$s
    ret=1
    return 0
}

zstyle ':vcs_info:hg+set-message:*' hooks hg-branchhead
function +vi-hg-branchhead() {
    export HOOK_COM=$hook_com
    hook_com[rev]="^ ${hook_com[rev]}"
}

# vim: ft=zsh
