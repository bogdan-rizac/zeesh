zstyle ':vcs_info:*' enable hg git svn
zstyle ':vcs_info:hg*:*' get-bookmarks true
zstyle ':vcs_info:*' get-revision true
zstyle ':vcs_info:*' check-for-changes true
zstyle ':vcs_info:hg*:' use-simple true

zstyle ':vcs_info:*:*' unstagedstr "+"
zstyle ':vcs_info:git*:*' stagedstr "^"
# zstyle ':vcs_info:hg*:*' hgrevformat "%r:%12.12h"
zstyle ':vcs_info:hg*:*' hgrevformat "%r" # only show local rev.
zstyle ':vcs_info:*:*' branchformat "%b" # only show branch

zstyle ':vcs_info:hg*' formats "%b%m:%i%u"
zstyle ':vcs_info:hg*' actionformats "%b%m:%i%u/%a"
zstyle ':vcs_info:git*' formats "%b%m@%12.12i%u"
zstyle ':vcs_info:git*' actionformats "%b%m@%12.12i%u/%a"

zstyle ':vcs_info:hg+gen-hg-bookmark-string:*' hooks hgbookmarks

function +vi-hgbookmarks() {
    local s i
    # The bookmarks returned by `hg' are available in
    # the functions positional parameters.
    for i in "$@"; do
        # I frequently use hg-git, which creates a master bookmark, I'd prefer for that to be ignored
        if [[ $i != "master" ]]; then
            [[ -n $s ]] && s=$s,
            s=${s}$i
        fi
    done
    # tiny styling tweak when bookmark exists
    [[ -n $s ]] && s=/$s
    hook_com[hg-bookmark-string]=$s
    ret=1
    return 0
}

zstyle ':vcs_info:hg*+set-message:*' hooks hg-storerev hg-branchhead

### Store the localrev and global hash for use in other hooks
function +vi-hg-storerev() {
    user_data[localrev]=${hook_com[localrev]}
    user_data[hash]=${hook_com[hash]}
}

### Show marker when the working directory is not on a branch head
# This may indicate that running `hg up` will do something
function +vi-hg-branchhead() {
    local branchheadsfile i_tiphash i_branchname
    local -a branchheads

    local branchheadsfile=${hook_com[base]}/.hg/branchheads.cache

    # Bail out if any mq patches are applied
    [[ -s ${hook_com[base]}/.hg/patches/status ]] && return 0

    if [[ -r ${branchheadsfile} ]] ; then
        while read -r i_tiphash i_branchname ; do
            branchheads+=( $i_tiphash )
        done < ${branchheadsfile}

        if [[ ! ${branchheads[(i)${user_data[hash]}]} -le ${#branchheads} ]] ; then
            hook_com[revision]="${c4}!${c2}${hook_com[revision]}"
        fi
    fi
}
# vim: ft=zsh
